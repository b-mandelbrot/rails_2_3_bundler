= Bundler with Rails 2.3

Rails 2.3 comes with its own gem handling. We're going to override that and replace it with support for Bundler.
NB: This may work with Rails versions lower than 2.3. The Bundler team has not tested those versions, and will not provide support for anyone on Rails older than 2.3, but feel free to try it. :)

More info: http://gembundler.com/rails23.html

== Using Bundler with Rails 2.3

1 - Insert the following code in config/boot.rb, right above the line `Rails.boot!`

  class Rails::Boot
    def run
      load_initializer

      Rails::Initializer.class_eval do
        def load_gems
          @bundler_loaded ||= Bundler.require :default, Rails.env
        end
      end

      Rails::Initializer.run(:set_load_path)
    end
  end

2 - Create a new file, config/preinitializer.rb, and insert the following. That is config NOT config/initializers.

  begin
    require "rubygems"
    require "bundler"
  rescue LoadError
    raise "Could not load the bundler gem. Install it with `gem install bundler`."
  end

  if Gem::Version.new(Bundler::VERSION) <= Gem::Version.new("0.9.24")
    raise RuntimeError, "Your bundler version is too old for Rails 2.3." +
    "Run `gem install bundler` to upgrade."
  end

  begin
    # Set up load paths for all bundled gems
    ENV["BUNDLE_GEMFILE"] = File.expand_path("../../Gemfile", __FILE__)
    Bundler.setup
  rescue Bundler::GemNotFound
    raise RuntimeError, "Bundler couldn't find some gems." +
    "Did you run `bundle install`?"
  end

3 - Get all config.gem declarations from your application, and place them into the Gemfile. If you have declarations in development.rb, for instance, place them in a named group. Make sure to include Rails itself and at least one source.

  group :development do
    gem "annotate"
  end
